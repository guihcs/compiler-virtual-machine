Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> empty
Rule 3     statement -> attrib
Rule 4     empty -> <empty>
Rule 5     attrib -> ID ATTRIB expression SEMICOLON
Rule 6     expression -> expression PLUS expression
Rule 7     expression -> expression MINUS expression
Rule 8     expression -> term
Rule 9     term -> term TIMES term
Rule 10    term -> term DIVIDE term
Rule 11    term -> NUMBER
Rule 12    term -> ID
Rule 13    term -> LPAREN expression RPAREN

Terminals, with rules where they appear

ATTRIB               : 5
DIVIDE               : 10
ID                   : 5 12
LPAREN               : 13
MINUS                : 7
NUMBER               : 11
PLUS                 : 6
RPAREN               : 13
SEMICOLON            : 5
TIMES                : 9
error                : 

Nonterminals, with rules where they appear

attrib               : 3
empty                : 2
expression           : 5 6 6 7 7 13
statement            : 1
statements           : 1 0
term                 : 8 9 9 10 10

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> . empty
    (3) statement -> . attrib
    (4) empty -> .
    (5) attrib -> . ID ATTRIB expression SEMICOLON

    $end            reduce using rule 4 (empty -> .)
    ID              shift and go to state 5

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    attrib                         shift and go to state 4

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (1) statements -> . statement statements
    (2) statements -> . empty
    (3) statement -> . attrib
    (4) empty -> .
    (5) attrib -> . ID ATTRIB expression SEMICOLON

    $end            reduce using rule 4 (empty -> .)
    ID              shift and go to state 5

    statement                      shift and go to state 2
    statements                     shift and go to state 6
    empty                          shift and go to state 3
    attrib                         shift and go to state 4

state 3

    (2) statements -> empty .

    $end            reduce using rule 2 (statements -> empty .)


state 4

    (3) statement -> attrib .

    ID              reduce using rule 3 (statement -> attrib .)
    $end            reduce using rule 3 (statement -> attrib .)


state 5

    (5) attrib -> ID . ATTRIB expression SEMICOLON

    ATTRIB          shift and go to state 7


state 6

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)


state 7

    (5) attrib -> ID ATTRIB . expression SEMICOLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    expression                     shift and go to state 9
    term                           shift and go to state 10

state 8

    (12) term -> ID .

    TIMES           reduce using rule 12 (term -> ID .)
    DIVIDE          reduce using rule 12 (term -> ID .)
    SEMICOLON       reduce using rule 12 (term -> ID .)
    PLUS            reduce using rule 12 (term -> ID .)
    MINUS           reduce using rule 12 (term -> ID .)
    RPAREN          reduce using rule 12 (term -> ID .)


state 9

    (5) attrib -> ID ATTRIB expression . SEMICOLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression

    SEMICOLON       shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 10

    (8) expression -> term .
    (9) term -> term . TIMES term
    (10) term -> term . DIVIDE term

    SEMICOLON       reduce using rule 8 (expression -> term .)
    PLUS            reduce using rule 8 (expression -> term .)
    MINUS           reduce using rule 8 (expression -> term .)
    RPAREN          reduce using rule 8 (expression -> term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 11

    (11) term -> NUMBER .

    TIMES           reduce using rule 11 (term -> NUMBER .)
    DIVIDE          reduce using rule 11 (term -> NUMBER .)
    SEMICOLON       reduce using rule 11 (term -> NUMBER .)
    PLUS            reduce using rule 11 (term -> NUMBER .)
    MINUS           reduce using rule 11 (term -> NUMBER .)
    RPAREN          reduce using rule 11 (term -> NUMBER .)


state 12

    (13) term -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    expression                     shift and go to state 18
    term                           shift and go to state 10

state 13

    (5) attrib -> ID ATTRIB expression SEMICOLON .

    ID              reduce using rule 5 (attrib -> ID ATTRIB expression SEMICOLON .)
    $end            reduce using rule 5 (attrib -> ID ATTRIB expression SEMICOLON .)


state 14

    (6) expression -> expression PLUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    expression                     shift and go to state 19
    term                           shift and go to state 10

state 15

    (7) expression -> expression MINUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    expression                     shift and go to state 20
    term                           shift and go to state 10

state 16

    (9) term -> term TIMES . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    term                           shift and go to state 21

state 17

    (10) term -> term DIVIDE . term
    (9) term -> . term TIMES term
    (10) term -> . term DIVIDE term
    (11) term -> . NUMBER
    (12) term -> . ID
    (13) term -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 8
    LPAREN          shift and go to state 12

    term                           shift and go to state 22

state 18

    (13) term -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression

    RPAREN          shift and go to state 23
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 19

    (6) expression -> expression PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression

    SEMICOLON       reduce using rule 6 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 6 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 6 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 20

    (7) expression -> expression MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression

    SEMICOLON       reduce using rule 7 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 7 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 7 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 21

    (9) term -> term TIMES term .
    (9) term -> term . TIMES term
    (10) term -> term . DIVIDE term

    TIMES           reduce using rule 9 (term -> term TIMES term .)
    DIVIDE          reduce using rule 9 (term -> term TIMES term .)
    SEMICOLON       reduce using rule 9 (term -> term TIMES term .)
    PLUS            reduce using rule 9 (term -> term TIMES term .)
    MINUS           reduce using rule 9 (term -> term TIMES term .)
    RPAREN          reduce using rule 9 (term -> term TIMES term .)

  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]


state 22

    (10) term -> term DIVIDE term .
    (9) term -> term . TIMES term
    (10) term -> term . DIVIDE term

    TIMES           reduce using rule 10 (term -> term DIVIDE term .)
    DIVIDE          reduce using rule 10 (term -> term DIVIDE term .)
    SEMICOLON       reduce using rule 10 (term -> term DIVIDE term .)
    PLUS            reduce using rule 10 (term -> term DIVIDE term .)
    MINUS           reduce using rule 10 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 10 (term -> term DIVIDE term .)

  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]


state 23

    (13) term -> LPAREN expression RPAREN .

    TIMES           reduce using rule 13 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 13 (term -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 13 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (term -> LPAREN expression RPAREN .)

