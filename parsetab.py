
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEATTRIB DIVIDE ID LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMESstatements : statement statements\n                | empty\n    statement : attrib empty : attrib : ID ATTRIB expression SEMICOLONexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : termterm : term TIMES termterm : term DIVIDE termterm : NUMBERterm : IDterm : LPAREN expression RPAREN'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,13,],[-4,0,-4,-2,-3,-1,-5,]),'ID':([0,2,4,7,12,13,14,15,16,17,],[5,5,-3,8,8,-5,8,8,8,8,]),'ATTRIB':([5,],[7,]),'NUMBER':([7,12,14,15,16,17,],[11,11,11,11,11,11,]),'LPAREN':([7,12,14,15,16,17,],[12,12,12,12,12,12,]),'TIMES':([8,10,11,21,22,23,],[-12,16,-11,-9,-10,-13,]),'DIVIDE':([8,10,11,21,22,23,],[-12,17,-11,-9,-10,-13,]),'SEMICOLON':([8,9,10,11,19,20,21,22,23,],[-12,13,-8,-11,-6,-7,-9,-10,-13,]),'PLUS':([8,9,10,11,18,19,20,21,22,23,],[-12,14,-8,-11,14,-6,-7,-9,-10,-13,]),'MINUS':([8,9,10,11,18,19,20,21,22,23,],[-12,15,-8,-11,15,-6,-7,-9,-10,-13,]),'RPAREN':([8,10,11,18,19,20,21,22,23,],[-12,-8,-11,23,-6,-7,-9,-10,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,],[1,6,]),'statement':([0,2,],[2,2,]),'empty':([0,2,],[3,3,]),'attrib':([0,2,],[4,4,]),'expression':([7,12,14,15,],[9,18,19,20,]),'term':([7,12,14,15,16,17,],[10,10,10,10,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement statements','statements',2,'p_s','parser.py',15),
  ('statements -> empty','statements',1,'p_s','parser.py',16),
  ('statement -> attrib','statement',1,'p_statement','parser.py',22),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',26),
  ('attrib -> ID ATTRIB expression SEMICOLON','attrib',4,'p_attrib','parser.py',30),
  ('expression -> expression PLUS expression','expression',3,'p_e','parser.py',38),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',43),
  ('expression -> term','expression',1,'p_expression_term','parser.py',48),
  ('term -> term TIMES term','term',3,'p_term','parser.py',52),
  ('term -> term DIVIDE term','term',3,'p_term_div','parser.py',58),
  ('term -> NUMBER','term',1,'p_term_number','parser.py',63),
  ('term -> ID','term',1,'p_term_id','parser.py',67),
  ('term -> LPAREN expression RPAREN','term',3,'p_paren','parser.py',73),
]
